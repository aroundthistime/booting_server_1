type User{
  id : ID! @id
  email : String! @unique
  name : String!
  password : String!
  avatar : String @unique
  gender : String!
  age : Int!
  department : String!
  height : Int!
  location : String!
  mbti : Mbti
  isSmoker : Boolean
  drink : [Drink]! @relation(name : "MyDrinkType")
  finishedMilitary : Boolean @default(value : true)
  datingType : [Dating!]! @relation(name : "MyDatingType")
  avoidSameDepartment : Boolean
  opponentAgeTop : Int
  opponentAgeBottom : Int
  oponentHeightTop : Int
  opponentHeightBottom : Int
  opponentMbti : [Mbti!]! @scalarList(strategy: RELATION)
  opponentIsSmoker : Boolean
  opponentDrink : [Drink!]! @relation(name : "OpponentDrinkType")
  opponentFinishedMilitary : Int
  opponentDatingType : [Dating!]! @relation(name : "OpponentDatingType")
  chats : [Chat!]!
  isBanned : Boolean @default(value : false)
}

enum Mbti {
  ISTJ
  ISFJ
  INFJ
  INTJ
  ISTP
  ISFP
  INFP
  INTP
  ESTP
  ESFP
  ENFP
  ENTP
  ESTJ
  ESFJ
  ENFJ
  ENTJ
}

type Drink {
  id : ID! @id
  frequency : String!
}

type Dating {
  id : ID! @id
  content : String!
}

type Response {
  id : ID! @id
  from : User! @relation(name : "LikeFrom")
  to : User! @relation(name : "LikeTo")
  isLiked : Boolean!
}

type Chat {
  id: ID! @id
  participants : [User!]!
  messages : [Message!]!
}

type Message{
  id : ID! @id
  text : String!
  from : User! @relation(name: "From")
  to : User! @relation(name: "To")
  chat : Chat!
  createdAt : DateTime! @createdAt
  updatedAt : DateTime! @updatedAt
  isChecked : Boolean @default(value : false)
}